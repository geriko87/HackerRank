using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'getTotalX' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY a
     *  2. INTEGER_ARRAY b
     */

    public static int getTotalX(List<int> a, List<int> b)
    {
            a.Sort();
            b.Sort();

            List<int> nums = new List<int>();

            if (a.Count > 1)
            {
                for (int i = a[a.Count - 1]; i <= b[0]; i++)
                {
                    if (IsDivisibleByA(i, a) && IsDivisibleByB(i, b))
                    {
                        nums.Add(i);
                    }
                }
            }
            else if (a.Count == 1 && a[0] == 1)
            {
                for (int i = 1; i <= b[0]; i++)
                {
                    if (IsDivisibleByB(i, b))
                    {
                        nums.Add(i);
                    }
                }
            }
            else if (a.Count == 1 && a[0] > 1 )
            {
                for (int i = a[0]; i <= b[0]; i++)
                {
                    if (IsDivisibleByB(i, b))
                    {
                        nums.Add(i);
                    }
                }
            }
            else //if (a.Count == 1 && a[0] > b[0])
            {
                nums.Clear();
            }
            return nums.Count;
    }
    static bool IsDivisibleByA(int number, List<int> list) 
    {
            foreach (int num in list)
            {
                if (number % num != 0)
                {
                    return false;
                }
            }
            return true;
    }
    static bool IsDivisibleByB(int number, List<int> list)
    {
            foreach (int num in list)
            {
                if (num % number != 0)
                {
                    return false;
                }
            }
            return true;
    }
}
class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int n = Convert.ToInt32(firstMultipleInput[0]);

        int m = Convert.ToInt32(firstMultipleInput[1]);

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        List<int> brr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(brrTemp => Convert.ToInt32(brrTemp)).ToList();

        int total = Result.getTotalX(arr, brr);

        textWriter.WriteLine(total);

        textWriter.Flush();
        textWriter.Close();
    }
}
