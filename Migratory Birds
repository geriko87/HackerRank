using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<int> arr)
    {
        int[] birdsCounter = new int[5];
        
        for(int i = 0; i < arr.Count; ++i)
        {
            if(arr[i] == 1) 
            {
                birdsCounter[0]++;   
            }
            else if(arr[i] == 2)
            {
                birdsCounter[1]++; 
            }            
            else if(arr[i] == 3)
            {
                birdsCounter[2]++; 
            }
            else if(arr[i] == 4)
            {
                birdsCounter[3]++; 
            }
            else
            {
                birdsCounter[4]++; 
            }        
        }
        int maxIndex = birdsCounter[0];
        int firstMaxIndex = 0;
        for(int i = 1; i < birdsCounter.Length; ++i)
        {
            if(birdsCounter[i] > maxIndex)
            {
                maxIndex = birdsCounter[i];
                firstMaxIndex = i;
            }
        }
        return firstMaxIndex + 1;
        
    }
}


class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int arrCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        int result = Result.migratoryBirds(arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
